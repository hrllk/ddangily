<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rnj.ddangily.persistence.MasterConfigMapper">
  <resultMap id="BaseResultMap" type="com.rnj.ddangily.model.MasterConfig">
    <id column="master_config_id" jdbcType="BIGINT" property="masterConfigId" />
    <result column="master_type" jdbcType="VARCHAR" property="masterType" />
    <result column="master_key" jdbcType="VARCHAR" property="masterKey" />
    <result column="master_value" jdbcType="VARCHAR" property="masterValue" />
    <result column="enabled" jdbcType="TINYINT" property="enabled" />
    <result column="created_by" jdbcType="VARCHAR" property="createdBy" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_by" jdbcType="VARCHAR" property="updatedBy" />
    <result column="last_update" jdbcType="TIMESTAMP" property="lastUpdate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    master_config_id, master_type, master_key, master_value, enabled, created_by, created_at, 
    updated_by, last_update
  </sql>
  <select id="selectByExample" parameterType="com.rnj.ddangily.model.MasterConfigExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from master_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from master_config
    where master_config_id = #{masterConfigId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from master_config
    where master_config_id = #{masterConfigId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.rnj.ddangily.model.MasterConfigExample">
    delete from master_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.rnj.ddangily.model.MasterConfig">
    insert into master_config (master_config_id, master_type, master_key, 
      master_value, enabled, created_by, 
      created_at, updated_by, last_update
      )
    values (#{masterConfigId,jdbcType=BIGINT}, #{masterType,jdbcType=VARCHAR}, #{masterKey,jdbcType=VARCHAR}, 
      #{masterValue,jdbcType=VARCHAR}, #{enabled,jdbcType=TINYINT}, #{createdBy,jdbcType=VARCHAR}, 
      #{createdAt,jdbcType=TIMESTAMP}, #{updatedBy,jdbcType=VARCHAR}, #{lastUpdate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.rnj.ddangily.model.MasterConfig">
    insert into master_config
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="masterConfigId != null">
        master_config_id,
      </if>
      <if test="masterType != null">
        master_type,
      </if>
      <if test="masterKey != null">
        master_key,
      </if>
      <if test="masterValue != null">
        master_value,
      </if>
      <if test="enabled != null">
        enabled,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedBy != null">
        updated_by,
      </if>
      <if test="lastUpdate != null">
        last_update,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="masterConfigId != null">
        #{masterConfigId,jdbcType=BIGINT},
      </if>
      <if test="masterType != null">
        #{masterType,jdbcType=VARCHAR},
      </if>
      <if test="masterKey != null">
        #{masterKey,jdbcType=VARCHAR},
      </if>
      <if test="masterValue != null">
        #{masterValue,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null">
        #{enabled,jdbcType=TINYINT},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        #{updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdate != null">
        #{lastUpdate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.rnj.ddangily.model.MasterConfigExample" resultType="java.lang.Long">
    select count(*) from master_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update master_config
    <set>
      <if test="record.masterConfigId != null">
        master_config_id = #{record.masterConfigId,jdbcType=BIGINT},
      </if>
      <if test="record.masterType != null">
        master_type = #{record.masterType,jdbcType=VARCHAR},
      </if>
      <if test="record.masterKey != null">
        master_key = #{record.masterKey,jdbcType=VARCHAR},
      </if>
      <if test="record.masterValue != null">
        master_value = #{record.masterValue,jdbcType=VARCHAR},
      </if>
      <if test="record.enabled != null">
        enabled = #{record.enabled,jdbcType=TINYINT},
      </if>
      <if test="record.createdBy != null">
        created_by = #{record.createdBy,jdbcType=VARCHAR},
      </if>
      <if test="record.createdAt != null">
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedBy != null">
        updated_by = #{record.updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="record.lastUpdate != null">
        last_update = #{record.lastUpdate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update master_config
    set master_config_id = #{record.masterConfigId,jdbcType=BIGINT},
      master_type = #{record.masterType,jdbcType=VARCHAR},
      master_key = #{record.masterKey,jdbcType=VARCHAR},
      master_value = #{record.masterValue,jdbcType=VARCHAR},
      enabled = #{record.enabled,jdbcType=TINYINT},
      created_by = #{record.createdBy,jdbcType=VARCHAR},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_by = #{record.updatedBy,jdbcType=VARCHAR},
      last_update = #{record.lastUpdate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.rnj.ddangily.model.MasterConfig">
    update master_config
    <set>
      <if test="masterType != null">
        master_type = #{masterType,jdbcType=VARCHAR},
      </if>
      <if test="masterKey != null">
        master_key = #{masterKey,jdbcType=VARCHAR},
      </if>
      <if test="masterValue != null">
        master_value = #{masterValue,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null">
        enabled = #{enabled,jdbcType=TINYINT},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        updated_by = #{updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdate != null">
        last_update = #{lastUpdate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where master_config_id = #{masterConfigId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rnj.ddangily.model.MasterConfig">
    update master_config
    set master_type = #{masterType,jdbcType=VARCHAR},
      master_key = #{masterKey,jdbcType=VARCHAR},
      master_value = #{masterValue,jdbcType=VARCHAR},
      enabled = #{enabled,jdbcType=TINYINT},
      created_by = #{createdBy,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_by = #{updatedBy,jdbcType=VARCHAR},
      last_update = #{lastUpdate,jdbcType=TIMESTAMP}
    where master_config_id = #{masterConfigId,jdbcType=BIGINT}
  </update>
</mapper>